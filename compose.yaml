networks:
  backend:

services:
  facts:
    build:
      dockerfile: Dockerfile
      args:
        SRC_PATH: ./src/facts
        APP_PATH: ./facts
        ASGI_APP: facts.app:app
    networks:
      - backend
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    ports:
      - "1234:1234"

  media:
    build:
      dockerfile: Dockerfile
      args:
        SRC_PATH: ./src/media
        APP_PATH: ./media
        ASGI_APP: media.app:app
    networks:
      - backend
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    ports:
      - "1235:1234"

  places:
    build:
      dockerfile: Dockerfile
      args:
        SRC_PATH: ./src/places
        APP_PATH: ./places
        ASGI_APP: places.app:app
    networks:
      - backend
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    ports:
      - "1236:1234"

  quizes:
    build:
      dockerfile: Dockerfile
      args:
        SRC_PATH: ./src/quizes
        APP_PATH: ./quizes
        ASGI_APP: quizes.app:app
    networks:
      - backend
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    ports:
      - "1237:1234"

  mongo:
    image: mongo:5
    networks:
      - backend
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
#      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
#      MONGO_INITDB_DATABASE: $MONGO_INITDB_DATABASE
    volumes:
      - "./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/corona_travel --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - 27017:27017

